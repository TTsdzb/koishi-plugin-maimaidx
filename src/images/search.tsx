import { h } from "koishi";
import MusicInfo from "../types/music";
import ChartInfo from "../types/chart";

const backgroundColors = [
  "#6fd43d",
  "#f8b709",
  "#ff818d",
  "#9f51dc",
  "#dbaaff",
];

/**
 * Draw a list of music.
 * @param musics Music to draw
 * @param extraColumns Extra table column to draw
 * @returns Music list image generated by Puppeteer
 */
export function drawSearchResults(
  musics: MusicInfo[],
  extraColumns: {
    title: string;
    font: "siyuan" | "torus";
    value: (arg0: MusicInfo) => any;
  }[] = []
): h {
  const entries = musics.map((music) => {
    const extras = extraColumns.map((column) => (
      <td style={`font-family: ${column.font}`}>{column.value(music)}</td>
    ));

    return (
      <tr>
        <td style="font-family: torus">{music.id}</td>
        <td>{music.title}</td>
        {extras}
      </tr>
    );
  });
  const extraColumnTitles = extraColumns.map((column) => (
    <th>{column.title}</th>
  ));

  return (
    <html>
      <head>
        <style>
          {`
              td {
                padding: 0.5em 2em;
              }
              table,
              th,
              td {
                border: 2px solid #c473ff;
              }
              @font-face {
                font-family: "torus";
                src: url("${this.config.assetsPath}/Torus SemiBold.otf");
              }
              @font-face {
                font-family: "siyuan";
                src: url("${this.config.assetsPath}/SourceHanSansSC-Bold.otf");
              }
            `}
        </style>
      </head>
      <table style="font-size: 20px; border-collapse: collapse; font-family: siyuan; color: #8c2cd5">
        <thead>
          <tr>
            <th>乐曲ID</th>
            <th>曲名</th>
            {extraColumnTitles}
          </tr>
        </thead>
        <tbody>{entries}</tbody>
      </table>
    </html>
  );
}

/**
 * Draw a list of music, with chart order involved.
 * @param musics Corresponding music and chart to draw
 * @param extraColumns Extra table column to draw
 * @returns Music list image generated by Puppeteer
 */
export function drawSearchResultsWithChart(
  musics: { musicInfo: MusicInfo; chart: ChartInfo }[],
  extraColumns: {
    title: string;
    font: "siyuan" | "torus";
    value: (arg0: { musicInfo: MusicInfo; chart: ChartInfo }) => any;
  }[] = []
): h {
  const entries = musics.map((music) => {
    const extras = extraColumns.map((column) => (
      <td style={`font-family: ${column.font}`}>{column.value(music)}</td>
    ));

    return (
      <tr
        style={`background-color: ${backgroundColors[music.chart.order]}; ${
          music.chart.order === 4 ? "color: #8c2cd5;" : ""
        }`}
      >
        <td style="font-family: torus">{music.musicInfo.id}</td>
        <td>{music.musicInfo.title}</td>
        {extras}
      </tr>
    );
  });
  const extraColumnTitles = extraColumns.map((column) => (
    <th>{column.title}</th>
  ));

  return (
    <html>
      <head>
        <style>
          {`
              td {
                padding: 0.5em 2em;
              }
              table,
              th,
              td {
                border: 2px solid #c473ff;
              }
              @font-face {
                font-family: "torus";
                src: url("${this.config.assetsPath}/Torus SemiBold.otf");
              }
              @font-face {
                font-family: "siyuan";
                src: url("${this.config.assetsPath}/SourceHanSansSC-Bold.otf");
              }
            `}
        </style>
      </head>
      <table style="font-size: 20px; border-collapse: collapse">
        <thead style="font-family: siyuan; color: #8c2cd5">
          <tr>
            <th>乐曲ID</th>
            <th>曲名</th>
            {extraColumnTitles}
          </tr>
        </thead>
        <tbody style="font-family: siyuan; color: white">{entries}</tbody>
      </table>
    </html>
  );
}
